{"ast":null,"code":"import _asyncToGenerator from \"E:/Formation/Laboratoire/Angular/Angular/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { tap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.AUTH_SERVER = \"http://127.0.0.1:5400\";\n    this.authSubject = new BehaviorSubject(false);\n  } //permet d'inscrire un nouveau utilisateur\n\n\n  register(user) {\n    return this.httpClient.post(`${this.AUTH_SERVER}/api/user`, user).pipe(tap(res => {\n      //verification du token\n      //console.log(res);\n      localStorage.setItem(\"ACCESS_TOKEN\", res.token);\n      localStorage.setItem(\"EXPIRES_IN\", res.token);\n      this.authSubject.next(true);\n    }));\n  } //permet la connection d'un utilisateur\n\n\n  singIn(user) {\n    var _this = this;\n\n    return this.httpClient.post(`${this.AUTH_SERVER}/api/login_check`, user).pipe(tap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (res) {\n        //verification du token\n        //console.log(res);\n        localStorage.setItem(\"ACCESS_TOKEN\", res.token); //localStorage.setItem(\"EXPIRES_IN\", res.user.expires_in);\n\n        _this.authSubject.next(true);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()));\n  } //permet la disconnection de l'utilisateur\n\n\n  signOut() {\n    localStorage.removeItem(\"ACCESS_TOKEN\"); //localStorage.removeItem(\"EXPIRES_IN\");\n\n    this.authSubject.next(false);\n  } //Returning the authSubject as Observable\n\n\n  isAuthenticated() {\n    if (localStorage.getItem(\"ACCESS_TOKEN\") != null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/Formation/Laboratoire/Angular/Angular/front-end/src/app/_services/auth.service.ts"],"names":["tap","BehaviorSubject","i0","i1","AuthService","constructor","httpClient","AUTH_SERVER","authSubject","register","user","post","pipe","res","localStorage","setItem","token","next","singIn","signOut","removeItem","isAuthenticated","getItem","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,eAAT,QAAgC,MAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmB,uBAAnB;AACA,SAAKC,WAAL,GAAmB,IAAIP,eAAJ,CAAoB,KAApB,CAAnB;AACH,GALoB,CAMrB;;;AACAQ,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACX,WAAO,KAAKJ,UAAL,CAAgBK,IAAhB,CAAsB,GAAE,KAAKJ,WAAY,WAAzC,EAAqDG,IAArD,EAA2DE,IAA3D,CAAgEZ,GAAG,CAAEa,GAAD,IAAS;AAChF;AACA;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACG,KAAzC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,GAAG,CAACG,KAAvC;AACA,WAAKR,WAAL,CAAiBS,IAAjB,CAAsB,IAAtB;AACH,KANyE,CAAnE,CAAP;AAOH,GAfoB,CAgBrB;;;AACAC,EAAAA,MAAM,CAACR,IAAD,EAAO;AAAA;;AACT,WAAO,KAAKJ,UAAL,CAAgBK,IAAhB,CAAsB,GAAE,KAAKJ,WAAY,kBAAzC,EAA4DG,IAA5D,EAAkEE,IAAlE,CAAuEZ,GAAG;AAAA,mCAAC,WAAOa,GAAP,EAAe;AAC7F;AACA;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACG,KAAzC,EAH6F,CAI7F;;AACA,QAAA,KAAI,CAACR,WAAL,CAAiBS,IAAjB,CAAsB,IAAtB;AACH,OANgF;;AAAA;AAAA;AAAA;AAAA,QAA1E,CAAP;AAOH,GAzBoB,CA0BrB;;;AACAE,EAAAA,OAAO,GAAG;AACNL,IAAAA,YAAY,CAACM,UAAb,CAAwB,cAAxB,EADM,CAEN;;AACA,SAAKZ,WAAL,CAAiBS,IAAjB,CAAsB,KAAtB;AACH,GA/BoB,CAgCrB;;;AACAI,EAAAA,eAAe,GAAG;AACd,QAAIP,YAAY,CAACQ,OAAb,CAAqB,cAArB,KAAwC,IAA5C,EAAkD;AAC9C,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ;;AAxCoB;;AA0CzBlB,WAAW,CAACmB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,WAAV,EAAuBF,EAAE,CAACwB,QAAH,CAAYvB,EAAE,CAACwB,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAvB,WAAW,CAACwB,KAAZ,GAAoB,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEb,EAAAA,KAAK,EAAEZ,WAAT;AAAsB0B,EAAAA,OAAO,EAAE1B,WAAW,CAACmB,IAA3C;AAAiDQ,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { tap } from 'rxjs/operators';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuthService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.AUTH_SERVER = \"http://127.0.0.1:5400\";\r\n        this.authSubject = new BehaviorSubject(false);\r\n    }\r\n    //permet d'inscrire un nouveau utilisateur\r\n    register(user) {\r\n        return this.httpClient.post(`${this.AUTH_SERVER}/api/user`, user).pipe(tap((res) => {\r\n            //verification du token\r\n            //console.log(res);\r\n            localStorage.setItem(\"ACCESS_TOKEN\", res.token);\r\n            localStorage.setItem(\"EXPIRES_IN\", res.token);\r\n            this.authSubject.next(true);\r\n        }));\r\n    }\r\n    //permet la connection d'un utilisateur\r\n    singIn(user) {\r\n        return this.httpClient.post(`${this.AUTH_SERVER}/api/login_check`, user).pipe(tap(async (res) => {\r\n            //verification du token\r\n            //console.log(res);\r\n            localStorage.setItem(\"ACCESS_TOKEN\", res.token);\r\n            //localStorage.setItem(\"EXPIRES_IN\", res.user.expires_in);\r\n            this.authSubject.next(true);\r\n        }));\r\n    }\r\n    //permet la disconnection de l'utilisateur\r\n    signOut() {\r\n        localStorage.removeItem(\"ACCESS_TOKEN\");\r\n        //localStorage.removeItem(\"EXPIRES_IN\");\r\n        this.authSubject.next(false);\r\n    }\r\n    //Returning the authSubject as Observable\r\n    isAuthenticated() {\r\n        if (localStorage.getItem(\"ACCESS_TOKEN\") != null) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}