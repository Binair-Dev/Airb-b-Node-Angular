{"ast":null,"code":"import _asyncToGenerator from \"F:/Laboratoire/Angular/Angular/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PropertyAddComponent = class PropertyAddComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.title = \"INSCRIVEZ VOUS\";\n    this.message = \"\";\n    this.countryList = countries;\n    this.isFirst = false;\n    this.inscriptionForm = this.formBuilder.group({\n      Prenom: ['', [Validators.required]],\n      Nom: ['', [Validators.required]],\n      Email: ['', [Validators.required, ValidationService.emailValidator]],\n      Pays: ['', [Validators.required]],\n      Telephone: ['', [Validators.required]],\n      Password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(100)]]\n    });\n  }\n\n  ngOnInit() {}\n\n  redirectToHome() {\n    this.router.navigateByUrl(\"login\");\n  }\n\n  registerAccount(form) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      form.value.Password = yield sha256(form.value.Password);\n\n      _this.authService.register(form.value).toPromise().then(data => {\n        if (data) _this.message = \"Vous avez bien été enregistré !\";\n      }).catch(error => {\n        if (error) _this.message = \"Erreur lors de votre enregistrement.. Veuillez réessayer !\";\n      });\n    })();\n  }\n\n};\nPropertyAddComponent = __decorate([Component({\n  selector: 'app-property-add',\n  templateUrl: './property-add.component.html',\n  styleUrls: ['./property-add.component.sass']\n})], PropertyAddComponent);\nexport { PropertyAddComponent };","map":{"version":3,"sources":["F:/Laboratoire/Angular/Angular/front-end/src/app/property-add/property-add.component.ts"],"names":["__decorate","Component","PropertyAddComponent","constructor","formBuilder","authService","router","title","message","countryList","countries","isFirst","inscriptionForm","group","Prenom","Validators","required","Nom","Email","ValidationService","emailValidator","Pays","Telephone","Password","minLength","maxLength","ngOnInit","redirectToHome","navigateByUrl","registerAccount","form","value","sha256","register","toPromise","then","data","catch","error","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,IAAIC,oBAAoB,GAAG,MAAMA,oBAAN,CAA2B;AAClDC,EAAAA,WAAW,CAACC,WAAD,EAAcC,WAAd,EAA2BC,MAA3B,EAAmC;AAC1C,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,gBAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmBC,SAAnB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,eAAL,GAAuB,KAAKR,WAAL,CAAiBS,KAAjB,CAAuB;AAC1CC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAACC,UAAU,CAACC,QAAZ,CAAL,CADkC;AAE1CC,MAAAA,GAAG,EAAE,CAAC,EAAD,EAAK,CAACF,UAAU,CAACC,QAAZ,CAAL,CAFqC;AAG1CE,MAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CAACH,UAAU,CAACC,QAAZ,EAAsBG,iBAAiB,CAACC,cAAxC,CAAL,CAHmC;AAI1CC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,CAACN,UAAU,CAACC,QAAZ,CAAL,CAJoC;AAK1CM,MAAAA,SAAS,EAAE,CAAC,EAAD,EAAK,CAACP,UAAU,CAACC,QAAZ,CAAL,CAL+B;AAM1CO,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACR,UAAU,CAACC,QAAZ,EAAsBD,UAAU,CAACS,SAAX,CAAqB,CAArB,CAAtB,EAA+CT,UAAU,CAACU,SAAX,CAAqB,GAArB,CAA/C,CAAL;AANgC,KAAvB,CAAvB;AAQH;;AACDC,EAAAA,QAAQ,GAAG,CACV;;AACDC,EAAAA,cAAc,GAAG;AACb,SAAKrB,MAAL,CAAYsB,aAAZ,CAA0B,OAA1B;AACH;;AACKC,EAAAA,eAAe,CAACC,IAAD,EAAO;AAAA;;AAAA;AACxBA,MAAAA,IAAI,CAACC,KAAL,CAAWR,QAAX,SAA4BS,MAAM,CAACF,IAAI,CAACC,KAAL,CAAWR,QAAZ,CAAlC;;AACA,MAAA,KAAI,CAAClB,WAAL,CAAiB4B,QAAjB,CAA0BH,IAAI,CAACC,KAA/B,EAAsCG,SAAtC,GAAkDC,IAAlD,CAAuDC,IAAI,IAAI;AAC3D,YAAIA,IAAJ,EACI,KAAI,CAAC5B,OAAL,GAAe,iCAAf;AACP,OAHD,EAGG6B,KAHH,CAGSC,KAAK,IAAI;AACd,YAAIA,KAAJ,EACI,KAAI,CAAC9B,OAAL,GAAe,4DAAf;AACP,OAND;AAFwB;AAS3B;;AAhCiD,CAAtD;AAkCAN,oBAAoB,GAAGF,UAAU,CAAC,CAC9BC,SAAS,CAAC;AACNsC,EAAAA,QAAQ,EAAE,kBADJ;AAENC,EAAAA,WAAW,EAAE,+BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,+BAAD;AAHL,CAAD,CADqB,CAAD,EAM9BvC,oBAN8B,CAAjC;AAOA,SAASA,oBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet PropertyAddComponent = class PropertyAddComponent {\r\n    constructor(formBuilder, authService, router) {\r\n        this.formBuilder = formBuilder;\r\n        this.authService = authService;\r\n        this.router = router;\r\n        this.title = \"INSCRIVEZ VOUS\";\r\n        this.message = \"\";\r\n        this.countryList = countries;\r\n        this.isFirst = false;\r\n        this.inscriptionForm = this.formBuilder.group({\r\n            Prenom: ['', [Validators.required]],\r\n            Nom: ['', [Validators.required]],\r\n            Email: ['', [Validators.required, ValidationService.emailValidator]],\r\n            Pays: ['', [Validators.required]],\r\n            Telephone: ['', [Validators.required]],\r\n            Password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(100)]],\r\n        });\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    redirectToHome() {\r\n        this.router.navigateByUrl(\"login\");\r\n    }\r\n    async registerAccount(form) {\r\n        form.value.Password = await sha256(form.value.Password);\r\n        this.authService.register(form.value).toPromise().then(data => {\r\n            if (data)\r\n                this.message = \"Vous avez bien été enregistré !\";\r\n        }).catch(error => {\r\n            if (error)\r\n                this.message = \"Erreur lors de votre enregistrement.. Veuillez réessayer !\";\r\n        });\r\n    }\r\n};\r\nPropertyAddComponent = __decorate([\r\n    Component({\r\n        selector: 'app-property-add',\r\n        templateUrl: './property-add.component.html',\r\n        styleUrls: ['./property-add.component.sass']\r\n    })\r\n], PropertyAddComponent);\r\nexport { PropertyAddComponent };\r\n"]},"metadata":{},"sourceType":"module"}